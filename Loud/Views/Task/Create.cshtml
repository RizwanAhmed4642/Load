@model SAS.Models.ViewModels.SASViewModels.TaskVM

@{
    ViewData["Title"] = "Activity";
}

<div class="loaderBar"></div>
<div class="content-wrapper">
    <div class="container-fluid">
        <div class="row pt-2">
            <div class="col-xl-12">
                <h1 class="text-center font-weight-bold">@ViewData["Title"]</h1>
                <hr />
                <p>@ViewData["Message"]</p>
                <form asp-action="Create" id="mainForm" data-parsley-validate>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="row">
                        <div class="col-xl-2" hidden="hidden">
                            <div class="form-group">
                                <label asp-for="ID" class="control-label"></label>
                                <input asp-for="ID" class="form-control form-control-sm" />
                                <span asp-validation-for="ID" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-xl-2">
                            <div class="form-group">
                                <label asp-for="Subject" class="control-label"></label>
                                <input asp-for="Subject" class="form-control form-control-sm" required="required" />
                                <span asp-validation-for="Subject" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-xl-3">
                            <div class="form-group">
                                <label asp-for="TaskTypeID" class="control-label"></label>
                                <select asp-for="TaskTypeID" class="form-control form-control-sm select2" asp-items="ViewBag.TaskTypeID" required="required"></select>
                                <span asp-validation-for="TaskTypeID" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-xl-2">
                            <div class="form-group">
                                <label asp-for="TripID" class="control-label"></label>
                                <select asp-for="TripID" class="form-control form-control-sm select2" asp-items="ViewBag.TripID" required="required"></select>
                                <span asp-validation-for="TripID" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-xl-2">
                            <div class="form-group">
                                <label asp-for="VenueTypeID" class="control-label"></label>
                                <select asp-for="VenueTypeID" class="form-control form-control-sm select2" asp-items="ViewBag.VenueTypeID" required="required"></select>
                                <span asp-validation-for="VenueTypeID" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-xl-2">
                            <div class="form-group">
                                <label asp-for="VenueID" class="control-label"></label>
                                <select asp-for="VenueID" class="form-control form-control-sm select2" asp-items="ViewBag.VenueID" required="required"></select>
                                <span asp-validation-for="VenueID" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-xl-2">
                            <div class="form-group">
                                <label asp-for="AssignToID" class="control-label"></label>
                                <select asp-for="AssignToID" class="form-control form-control-sm select2" asp-items="ViewBag.AssignToID" required="required"></select>
                                <span asp-validation-for="AssignToID" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-xl-2">
                            <div class="form-group">
                                <label asp-for="StartDate" class="control-label"></label>
                                <input asp-for="StartDate" value='' class="form-control form-control-sm" type="date" required="required" />
                                <span asp-validation-for="StartDate" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-xl-2">
                            <div class="form-group">
                                <label asp-for="DoByDate" class="control-label"></label>
                                <input asp-for="DoByDate" value='' class="form-control form-control-sm" type="date" />
                                <span asp-validation-for="DoByDate" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-xl-2">
                            <div class="form-group">
                                <label asp-for="CompletedDate" class="control-label"></label>
                                <input asp-for="CompletedDate" value='' class="form-control form-control-sm" type="date" />
                                <span asp-validation-for="CompletedDate" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-xl-2" style="margin-top:30px;">
                            <div class="form-group">
                                <div class="form-check text-success">
                                    <input type="checkbox" class="form-check-input" value="true" name="Complete" id="Complete">
                                    <label class="form-check-label" for="Complete">Complete</label>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-2" hidden="hidden">
                            <div class="form-group">
                                <label asp-for="ItemListPos" class="control-label"></label>
                                <input asp-for="ItemListPos" class="form-control form-control-sm" />
                                <span asp-validation-for="ItemListPos" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-xl-2" style="margin-top:30px;">
                            <div class="form-group">
                                <div class="form-check text-success">
                                    <input type="checkbox" class="form-check-input" value="true" name="ResponseRecieved" id="ResponseRecieved">
                                    <label class="form-check-label" for="ResponseRecieved">Response Recieved</label>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-6">
                            <div class="form-group">
                                <label asp-for="Note" class="control-label"></label>
                                <textarea asp-for="Note" class="form-control" id="Note"></textarea>
                                <span asp-validation-for="Note" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-xl-2 text-center" style="margin-top:30px;">
                            <button type="button" onclick="submitForm();" id="btnSubmitForm" class="btn btn-sm btn-primary">Create</button>
                            <a asp-action="Index" class="btn btn-sm btn-danger">Cancel</a>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="row pt-2">
            <div class="col-xl-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Task List</h3>
                        <div class="card-tools">
                            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                <i class="fas fa-minus"></i>
                            </button>
                            <button type="button" class="btn btn-tool" data-card-widget="remove">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <table class="display table table-sTasked table-borderless w-100" id="TasksTable">
                            <thead>
                                <tr>
                                    <td class=""> Task Type </td>
                                    <td class=""> Assign To </td>
                                    <td class=""> Start Date </td>
                                    <td class=""> Subject </td>
                                    <td class=""> Note </td>
                                    <td>Actions</td>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

@section Scripts {



    <script>

        function loadVenues()
        {
            // get the selected option
            const selectedOption = $('#VenueTypeID option:selected');
            // get the text of the selected option
            const selectedText = selectedOption.text();
            $.ajax({
                type: "GET",
                url: "/Task/GetVenueItemsBasedOnVenueType?venueType="+selectedText,
                dataType: "json",
                success: function (data) {
                    //console.log(data);
                    //Remove all previous options from the select element
                    $('#VenueID').empty();

                    //Loop through the results and add each option to the select element         
                    $.each(data.data, function (index, item) {
                        $('#VenueID').append($('<option>').val(item.value).text(item.text));
                    });
                    //selecting the new venue
                    $("#VenueID").val("@Model.VenueID");
                    $('#VenueID').trigger('change');
                }
            });
        }

        $(document).on("change", "#VenueTypeID", function () {

            loadVenues();
        });

        function validateMainForm() {

            if ($('#mainForm').parsley().validate()) {
                return true;
            } else {
                $.notify("Some fields are required.", { position: "top right", className: "error" });
                return false;
            }

        }

        function submitForm() {
            if (validateMainForm()) {

                $(".loaderBar").fadeIn("slow");
                let myform = document.getElementById("mainForm");
                // Serializing the whole form data to submit
                let fd = new FormData(myform);
                let url = "";
                if ($("#btnSubmitForm").text() == "Create")
                    url = '@Url.Action("Create", "Task")'
                else if ($("#btnSubmitForm").text() == "Update")
                    url = '@Url.Action("UpdateTask", "Task")'
                $.ajax({
                    url: url,
                    data: fd,
                    cache: false,
                    processData: false,
                    contentType: false,
                    type: 'POST',
                    success: function (data) {

                        if (data.success) {

                            $(".loaderBar").fadeOut("slow");
                            if (data.success != false) {
                                $.notify(data.message, { globalPosition: "top right", className: data.flag });
                                //Refresh the form controls for next record
                                $("#mainForm").trigger("reset");
                                $('#Note').summernote('code', '');
                                $("#btnSubmitForm").text("Create");
                                //Loading the Grid Records
                                getTasksTableRecords();
                                //reload the page after 1 second
                                //Sleep for 1 seconds and then redirect to home
                                //setTimeout(function () { location.reload(); }, 1000);

                            }
                            else
                                $.notify(data.message, { globalPosition: "top right", className: data.flag });

                        }
                    }
                });
            }
        }

        function EditTask(id) {

            $(".loaderBar").fadeIn("slow");
            $.ajax({
                url: '@Url.Action("EditTask", "Task")',
                data: { id: id },
                cache: false,
                type: 'POST',
                success: function (data) {

                    if (data.success) {

                        $(".loaderBar").fadeOut("slow");
                        if (data.success != false) {

                            //Settings the controls values
                            $("#ID").val(data.data.id);
                            $("#TaskTypeID").val(data.data.taskTypeID);
                            $('#TaskTypeID').trigger('change');
                            $("#Subject").val(data.data.subject);
                            $("#TripID").val(data.data.tripID);
                            $('#TripID').trigger('change');
                            $("#StartDate").val(moment(data.data.startDate).format('YYYY-MM-DD'));
                            $("#DoByDate").val(moment(data.data.doByDate).format('YYYY-MM-DD'));
                            $("#CompletedDate").val(moment(data.data.completedDate).format('YYYY-MM-DD'));
                            $("#VenueTypeID").val(data.data.venueTypeID);
                            $('#VenueTypeID').trigger('change');
                            $("#VenueID").val(data.data.venueID);
                            $('#VenueID').trigger('change');
                            $("#AssignToID").val(data.data.assignToID);
                            $('#AssignToID').trigger('change');
                            $('#Note').summernote('code', data.data.note);
                            //$("#Note").text(data.data.note);
                            $('#Complete').prop('checked', data.data.complete);
                            $("#ItemListPos").val(data.data.itemListPos);
                            $('#ResponseRecieved').prop('checked', data.data.responseRecieved);
                            $("#Created_By").val(data.data.created_By);
                            $("#Updated_By").val(data.data.updated_By);
                            $("#Created_At").val(data.data.created_At);
                            $("#Updated_At").val(data.data.updated_At);
                            $("#btnSubmitForm").text("Update");
                            //console.log(data);

                        }
                        else
                            $.notify(data.message, { globalPosition: "top right", className: data.flag });

                    }
                }
            });
        }

        function Delete(id) {

            $.confirm({
                title: 'Delete',
                content: 'Are you sure to delete this record?',
                icon: 'fa fa-question-circle-o',
                theme: 'supervan',
                closeIcon: true,
                animation: 'scale',
                type: 'orange',
                buttons: {
                    cancel: {
                        text: 'Cancel',
                        btnClass: 'btn-blue',
                        keys: ['esc'],
                        action: function () {

                            $(".loaderBar").fadeOut("slow");
                        }
                    },
                    confirm: {
                        text: 'Delete',
                        btnClass: 'btn-red',
                        keys: ['enter', 'shift'],
                        action: function () {

                            $(".loaderBar").fadeIn("slow");
                            $.ajax({

                                type: "POST",
                                url: '@Url.Action("DeleteTask", "Task")?id=' + id,
                                success: function (data) {

                                    if (data.success) {
                                        $(".loaderBar").fadeOut("slow");
                                        $.notify("Deleted Successfully", { globalPosition: "top right", className: "success" });
                                        //Loading the Grid Records
                                        getTasksTableRecords();
                                    }
                                },
                                error: function () { alert('Error:'); $(".loaderBar").fadeOut("slow"); }
                            });
                            //reload the page after 1 second
                            //Sleep for 1 seconds and then redirect to home
                            //setTimeout(function () { location.reload(); }, 1000);
                        }
                    }
                }
            });

        }

        function getTasksTableRecords() {
            $('#TasksTable').DataTable().destroy();
            $.fn.dataTable.ext.errMode = 'none';    //Suppressing Warnings in DataTables
            dataTableReceipt = $("#TasksTable").DataTable(
                {
                    "processing": true, // for show progress bar
                    //"serverSide": true, // for process server side
                    "filter": true, // this is for disable filter (search box)
                    "orderMulti": false, // for disable multiple column at once
                    "initComplete": function (settings, json) {

                        //console.log(json);
                    },
                    "pageLength": 10,
                    "ajax": {
                        //"url": '/Task/GetAllTasksInJson/,
                        "url": "@Url.Action("GetAllTasksInJson", "Task")",
                        "type": "GET",
                        "datatype": "json"
                    },
                    "columns": [

                        { "data": "taskTypeName", width: '', class: '' },
                        { "data": "assignToName", width: '', class: '' },
                        {
                            "data": null,
                            class: '',
                            "render": function (data, type, full, meta) {

                                return moment(full["startDate"]).format('MM-DD-YYYY');//converting datetime into string with moment.js function
                            }
                        },
                        { "data": "subject", width: '', class: '' },
                        { "data": "note", width: '', class: '' },
                        {
                            "data": null, width: '', class: '',
                            "render": function (data, type, full, meta) {
                                var id = full["id"];
                                return "<a class='btn btn-sm btn-warning' id='btnEditTask' title='Edit' onclick='EditTask(\"" + id + "\")'><i class='fas fa-edit'> </i> </a> <a class='btn btn-sm btn-danger' id='btnDeleteTask' title='Delete' onclick='Delete(\"" + id + "\")'><i class='fas fa-trash'> </i> </a>"
                            },
                            "orderable": false,
                            "searchable": false
                        }
                    ],
                    "order": [[0, "asc",]],
                    "dom": 'lfrtBip',
                    "buttons": [
                        {
                            extend: 'copy',
                            messageTop: '\n ',
                            messageBottom: '\n ',
                            exportOptions: {
                                columns: ':visible'
                                //columns: [0, 1, 2, 3, 4, 5, 6]
                            },
                            text: '<i class="fa fa-clone"></i> Copy'
                        },
                        {
                            extend: 'excel',
                            messageTop: '\n ',
                            messageBottom: '\n ',
                            exportOptions: {
                                columns: ':visible'
                                //columns: [0, 1, 2, 3, 4, 5, 6]
                            },
                            text: '<i class="fa fa-file-excel-o"></i> Excel'
                        },
                        {
                            extend: 'csv',
                            messageTop: '\n ',
                            messageBottom: '\n ',
                            exportOptions: {
                                columns: ':visible'
                                //columns: [0, 1, 2, 3, 4, 5, 6]
                            },
                            text: '<i class="fa fa-file"></i> CSV'
                        },
                        {
                            extend: 'pdf',
                            messageTop: '\n ',
                            messageBottom: '\n ',
                            exportOptions: {
                                columns: ':visible'
                                //columns: [0, 1, 2, 3, 4, 5, 6]
                            },
                            text: '<i class="fa fa-file-pdf-o"></i> PDF'
                        },
                        {
                            extend: 'print',
                            messageTop: '<br> ',
                            messageBottom: '<br> ',
                            exportOptions: {
                                columns: ':visible'
                                //columns: [0, 1, 2, 3, 4, 5, 6]
                            },
                            text: '<i class="fa fa-print"></i> Print'
                        },
                        'colvis'
                    ],
                    responsive: true
                });
        }

    </script>

    <script>
        $(document).ready(function () {

            getTasksTableRecords();

            if(@Model.VenueTypeID>0) {

                ////To select an option with a specific text using jQuery
                //$('#VenueID option').filter(':contains("High School 3")').prop('selected', true);
                //$('#VenueID').trigger('change');
                loadVenues();

            }
            // Get the current date
            var date = new Date();
            // Set the value of the input field to the current date
            $('input[type="date"][name="StartDate"]').val(date.toISOString().slice(0, 10));
            $('input[type="date"][name="DoByDate"]').val(date.toISOString().slice(0, 10));
            $('input[type="date"][name="CompletedDate"]').val(date.toISOString().slice(0, 10));
        });
    </script>

    }
